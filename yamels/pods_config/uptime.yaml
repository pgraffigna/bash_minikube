apiVersion: apps/v1
kind: Deployment
metadata:
  name: uptime
  labels:
    app: uptime
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uptime
  template:
    metadata:
      labels:
        app: uptime
    spec:
      containers:
      - name: uptime
        image: louislam/uptime-kuma:latest
        ports:
        - containerPort: 3001
        volumeMounts:
        - name: uptime-data
          mountPath: /app/data
      volumes:
      - name: uptime-data
        persistentVolumeClaim:
          claimName: uptime-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uptime-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: uptime-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-path
  local:
    path: /mnt/uptime_data
    fsType: ext4
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - k3s
---
apiVersion: v1
kind: Service
metadata:
  name: uptime
  labels:
    app: uptime
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3001
  selector:
    app: uptime
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: uptime-ingress
spec:
  ingressClassName: traefik
  rules:
  - host: uptime.home.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: uptime
            port:
              number: 80
